{"version":3,"sources":["../../server/middlewares/authenticate.js"],"names":["req","res","next","header","headers","authorization","token","split","jwt","verify","process","env","JWT_SECRET","err","decoded","status","json","errors","global","User","findOne","email","then","currentUser","user"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;kBAEe,UAACA,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACjC,MAAMC,SAASH,IAAII,OAAJ,CAAYC,aAA3B;AACA,MAAIC,cAAJ;;AAEA,MAAIH,MAAJ,EAAYG,QAAQH,OAAOI,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAAR;;AAEZ,MAAID,KAAJ,EAAW;AACTE,2BAAIC,MAAJ,CAAWH,KAAX,EAAkBI,QAAQC,GAAR,CAAYC,UAA9B,EAA0C,UAACC,GAAD,EAAMC,OAAN,EAAkB;AAC1D,UAAID,GAAJ,EAAS;AACPZ,YAAIc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,QAAQ,EAAEC,QAAQ,eAAV,EAAV,EAArB;AACD,OAFD,MAEO;AACLC,uBAAKC,OAAL,CAAa,EAAEC,OAAOP,QAAQO,KAAjB,EAAb,EAAuCC,IAAvC,CAA4C,gBAAQ;AAClDtB,cAAIuB,WAAJ,GAAkBC,IAAlB;AACAtB;AACD,SAHD;AAID;AACF,KATD;AAUD,GAXD,MAWO;AACLD,QAAIc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,QAAQ,EAAEC,QAAQ,UAAV,EAAV,EAArB;AACD;AACF,C","file":"authenticate.js","sourcesContent":["import jwt from \"jsonwebtoken\";\nimport User from \"../models/User\";\n\nexport default (req, res, next) => {\n  const header = req.headers.authorization;\n  let token;\n\n  if (header) token = header.split(\" \")[1];\n\n  if (token) {\n    jwt.verify(token, process.env.JWT_SECRET, (err, decoded) => {\n      if (err) {\n        res.status(401).json({ errors: { global: \"Invalid token\" } });\n      } else {\n        User.findOne({ email: decoded.email }).then(user => {\n          req.currentUser = user;\n          next();\n        });\n      }\n    });\n  } else {\n    res.status(401).json({ errors: { global: \"No token\" } });\n  }\n};"]}