{"version":3,"sources":["../server/index.js"],"names":["app","use","bodyParser","json","mongoose","Promise","connect","keys","mongoURI","useNewUrlParser","then","console","log","catch","users","auth","process","env","NODE_ENV","express","static","get","req","res","sendFile","path","resolve","__dirname","port","PORT","listen"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;;AAEAA,IAAIC,GAAJ,CAAQC,qBAAWC,IAAX,EAAR;AACAC,mBAASC,OAAT,GAAmBA,kBAAnB;;AAEA;AACAD,mBAASE,OAAT,CAAiBC,eAAKC,QAAtB,EAAgC,EAAEC,iBAAiB,IAAnB,EAAhC,EACEC,IADF,CACO;AAAA,SAAMC,QAAQC,GAAR,CAAY,sBAAZ,CAAN;AAAA,CADP,EAEEC,KAFF,CAEQ;AAAA,SAAOF,QAAQC,GAAR,CAAY,yBAAZ,EAAuCL,eAAKC,QAA5C,CAAP;AAAA,CAFR;;AAIC;AACAR,IAAIC,GAAJ,CAAQ,YAAR,EAAsBa,eAAtB;AACAd,IAAIC,GAAJ,CAAQ,WAAR,EAAqBc,cAArB;;AAEA;AACD,IAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AAC1C;AACAlB,MAAIC,GAAJ,CAAQkB,kBAAQC,MAAR,CAAe,cAAf,CAAR;;AAEApB,MAAIqB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,QAAIC,QAAJ,CAAaC,eAAKC,OAAL,CAAaC,SAAb,EAAwB,QAAxB,EAAkC,OAAlC,EAA2C,YAA3C,CAAb;AACD,GAFD;AAGA;;AAEA,IAAMC,OAAOZ,QAAQC,GAAR,CAAYY,IAAZ,IAAoB,IAAjC;;AAEA7B,IAAI8B,MAAJ,CAAWF,IAAX,EAAiB;AAAA,SAAMjB,QAAQC,GAAR,iCAA0CgB,IAA1C,CAAN;AAAA,CAAjB","file":"index.js","sourcesContent":["import express from \"express\";\nimport mongoose from \"mongoose\";\nimport bodyParser from \"body-parser\";\nimport keys from \"./config/keys\";\nimport Promise from \"bluebird\";\nimport users from \"./routes/users\";\nimport auth from \"./routes/auth\";\nimport path from \"path\";\n\nconst app = express();\n\napp.use(bodyParser.json());\nmongoose.Promise = Promise;\n\n// Connect to Mongo\nmongoose.connect(keys.mongoURI, { useNewUrlParser: true })\n .then(() => console.log(\"MongoDB connected!..\"))\n .catch(err => console.log(\"something went wrong!..\", keys.mongoURI))\n\n //user Routes\n app.use(\"/api/users\", users);\n app.use(\"/api/auth\", auth);\n\n // Serve static assets if in production\nif (process.env.NODE_ENV === 'production') {\n\t// Set static folder\n\tapp.use(express.static('client/build'));\n  \n\tapp.get('*', (req, res) => {\n\t  res.sendFile(path.resolve(__dirname, 'client', 'build', 'index.html'));\n\t});\n}\n\n const port = process.env.PORT || 5000;\n\n app.listen(port, () => console.log(`server listening on port : ${port}`));\n"]}